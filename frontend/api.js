// This file is automatically generated
import Axios from 'axios'

/* 
 * asynchronous fluent api for urls from django project using Axios
 * Usage: 
 * const django = new DjangoURL()
 * const res = await django.path.to.endpoint.method(args)
 * [do something with response]
 */
export default class DjangoURL {

  constructor(token = '') {
    this.baseurl = 'https://localhost:8443'
    this.path = '/'
    this.token = token
  }

  get login() {
    this.path += 'login/'
    return this
  }

  get registration() {
    this.path += 'registration/'
    return this
  }

  get logout() {
    this.path += 'logout/'
    return this
  }

  get logoutall() {
    this.path += 'logoutall/'
    return this
  }

  get reset() {
    this.path += 'reset/'
    return this
  }

  get confirm() {
    this.path += 'confirm/'
    return this
  }

  get user() {
    this.path += 'user/'
    return this
  }

  get change() {
    this.path += 'change/'
    return this
  }

  composers(pk = '') {
    this.path += 'composers/'
    if (pk) {
      this.path += pk + '/'
    }
    return this
  }

  tags(pk = '') {
    this.path += 'tags/'
    if (pk) {
      this.path += pk + '/'
    }
    return this
  }

  sheets(pk = '') {
    this.path += 'sheets/'
    if (pk) {
      this.path += pk + '/'
    }
    return this
  }

  get upload_file() {
    this.path += 'upload-file/'
    return this
  }

  pieces(pk = '') {
    this.path += 'pieces/'
    if (pk) {
      this.path += pk + '/'
    }
    return this
  }

  get music() {
    this.path += 'music/'
    return this
  }

  get docs() {
    this.path += 'docs/'
    return this
  }

  get v1() {
    this.path += 'v1/'
    return this
  }

  get auth() {
    this.path += 'auth/'
    return this
  }

  get password() {
    this.path += 'password/'
    return this
  }

  setAuthorization(config) {
    if (this.token) {
      config.headers = config.headers || {}
      config.headers.Authorization = `Token ${this.token}`
    }
    return config
  }

  setupRequest(config) {
    const url = this.url
    this.path = '/'
    config = setAuthorization(config)
    return { config, url }
  }

  async get(initialConfig = {}) {
    const { config, url } = this.setupRequest(initialConfig)
    return Axios.get(url, config)
  }

  async delete(initialConfig = {}) {
    const { config, url } = this.setupRequest(initialConfig)
    return Axios.delete(url, config)
  }

  async head(initialConfig = {}) {
    const { config, url } = this.setupRequest(initialConfig)
    return Axios.head(url, config)
  }

  async options(initialConfig = {}) {
    const { config, url } = this.setupRequest(initialConfig)
    return Axios.options(url, config)
  }

  async post(payload, initialConfig = {}) {
    const { config, url } = this.setupRequest(initialConfig)
    return Axios.post(url, payload, config)
  }

  async put(payload, initialConfig = {}) {
    const { config, url } = this.setupRequest(initialConfig)
    return Axios.put(url, payload, config)
  }

  async patch(payload, initialConfig = {}) {
    const { config, url } = this.setupRequest(initialConfig)
    return Axios.patch(url, payload, config)
  }
}
/*
 * This was generated from the list of urls: 
 *   /v1/auth/login/
 *   /v1/auth/registration/
 *   /v1/auth/logout/
 *   /v1/auth/logoutall/
 *   /v1/auth/password/reset/
 *   /v1/auth/password/reset/confirm/
 *   /v1/auth/login/
 *   /v1/auth/logout/
 *   /v1/auth/user/
 *   /v1/auth/password/change/
 *   /v1/music/composers/
 *   /v1/music/composers/<pk>/
 *   /v1/music/tags/
 *   /v1/music/tags/<pk>/
 *   /v1/music/sheets/
 *   /v1/music/sheets/<pk>/
 *   /v1/music/sheets/<pk>/upload-file/
 *   /v1/music/pieces/
 *   /v1/music/pieces/<pk>/
 *   /v1/music/
 *   /docs/
 */