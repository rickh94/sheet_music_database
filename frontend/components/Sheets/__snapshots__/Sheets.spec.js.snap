// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Sheets /> renders 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Sheets
    alert={
      Object {
        "show": [MockFunction] {
          "calls": Array [
            Array [
              <span
                className="alert-text"
              >
                Could not get Sheets
              </span>,
              Object {
                "type": "error",
              },
            ],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        },
      }
    }
    createSheet={[MockFunction]}
    deleteSheet={[MockFunction]}
    getSheets={
      [MockFunction] {
        "calls": Array [
          Array [
            "testtoken",
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    history={
      Object {
        "push": [MockFunction],
      }
    }
    sheets={
      Object {
        "list": Array [],
      }
    }
    token="testtoken"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Connect(Header) />,
        <Container
          breakpoint={null}
          fluid={false}
          renderAs="div"
          style={Object {}}
        >
          <Box
            className="margin-default"
            renderAs="div"
            style={Object {}}
          >
            <Level
              breakpoint={null}
              className=""
              renderAs="div"
              style={Object {}}
            >
              <Heading
                className="absolutely-no-margin level-item level-left"
                heading={false}
                renderAs="h1"
                size={3}
                spaced={false}
                subtitle={false}
                weight={null}
              >
                Sheets
              </Heading>
              <a
                className="level-item level-right edit-link"
                id="activate-create"
                onClick={[Function]}
                style={
                  Object {
                    "verticalAlign": "top",
                  }
                }
              >
                <FontAwesomeIcon
                  border={false}
                  className=""
                  fixedWidth={false}
                  flip={null}
                  icon="plus"
                  inverse={false}
                  listItem={false}
                  mask={null}
                  pull={null}
                  pulse={false}
                  rotation={null}
                  size={null}
                  spin={false}
                  style={
                    Object {
                      "paddingRight": "0.2rem",
                    }
                  }
                  symbol={false}
                  title=""
                  transform={null}
                />
                 
                Create
              </a>
            </Level>
          </Box>
        </Container>,
        <Modal
          className=""
          closeOnBlur={true}
          closeOnEsc={true}
          document={null}
          onClose={[Function]}
          show={false}
          showClose={true}
        >
          <ModalContent
            className=""
            renderAs="div"
            style={Object {}}
          >
            <Box
              className=""
              renderAs="div"
              style={Object {}}
            >
              <Heading
                className="absolutely-no-margin little-padding-bottom"
                heading={false}
                renderAs="h1"
                size={4}
                spaced={false}
                subtitle={false}
                weight={null}
              >
                New Sheet
              </Heading>
              <form>
                <TextFieldWithErrors
                  label="File Name"
                  onChange={[Function]}
                  placeholder="file.pdf"
                  type="text"
                  value=""
                />
                <TextFieldWithErrors
                  label="File format"
                  onChange={[Function]}
                  placeholder="PDF"
                  type="text"
                  value=""
                />
                <TextFieldWithErrors
                  label="Sheet Type"
                  onChange={[Function]}
                  placeholder="part"
                  type="text"
                  value=""
                />
                <FieldWithErrors
                  label="File"
                >
                  <FilePond
                    allowMultiple={false}
                    file={null}
                    onupdatfiles={[Function]}
                  />
                </FieldWithErrors>
                <Field
                  align={null}
                  className=""
                  horizontal={false}
                  kind={null}
                  multiline={false}
                  renderAs="div"
                  style={Object {}}
                  type="group"
                >
                  <Control
                    className=""
                    fullwidth={false}
                    iconLeft={false}
                    iconRight={false}
                    loading={false}
                    renderAs="div"
                    size={null}
                    style={Object {}}
                  >
                    <Button
                      className=""
                      color="primary"
                      disabled={false}
                      fullwidth={false}
                      inverted={false}
                      isSelected={false}
                      isStatic={false}
                      loading={false}
                      onClick={[Function]}
                      outlined={false}
                      remove={false}
                      renderAs="button"
                      reset={false}
                      rounded={false}
                      size={null}
                      state={null}
                      style={Object {}}
                      submit={false}
                      text={false}
                      type="primary"
                    >
                      Save
                    </Button>
                    <Button
                      className=""
                      color={null}
                      disabled={false}
                      fullwidth={false}
                      inverted={false}
                      isSelected={false}
                      isStatic={false}
                      loading={false}
                      onClick={[Function]}
                      outlined={false}
                      remove={false}
                      renderAs="button"
                      reset={false}
                      rounded={false}
                      size={null}
                      state={null}
                      style={Object {}}
                      submit={false}
                      text={false}
                    >
                      Cancel
                    </Button>
                  </Control>
                </Field>
              </form>
            </Box>
          </ModalContent>
        </Modal>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "backgroundColor": undefined,
          "breakpoint": null,
          "children": <Box
            className="margin-default"
            renderAs="div"
            style={Object {}}
          >
            <Level
              breakpoint={null}
              className=""
              renderAs="div"
              style={Object {}}
            >
              <Heading
                className="absolutely-no-margin level-item level-left"
                heading={false}
                renderAs="h1"
                size={3}
                spaced={false}
                subtitle={false}
                weight={null}
              >
                Sheets
              </Heading>
              <a
                className="level-item level-right edit-link"
                id="activate-create"
                onClick={[Function]}
                style={
                  Object {
                    "verticalAlign": "top",
                  }
                }
              >
                <FontAwesomeIcon
                  border={false}
                  className=""
                  fixedWidth={false}
                  flip={null}
                  icon="plus"
                  inverse={false}
                  listItem={false}
                  mask={null}
                  pull={null}
                  pulse={false}
                  rotation={null}
                  size={null}
                  spin={false}
                  style={
                    Object {
                      "paddingRight": "0.2rem",
                    }
                  }
                  symbol={false}
                  title=""
                  transform={null}
                />
                 
                Create
              </a>
            </Level>
          </Box>,
          "className": undefined,
          "clearfix": undefined,
          "clipped": undefined,
          "fluid": false,
          "hidden": undefined,
          "invisible": undefined,
          "italic": undefined,
          "marginless": undefined,
          "overlay": undefined,
          "paddingless": undefined,
          "pull": undefined,
          "radiusless": undefined,
          "renderAs": "div",
          "responsive": undefined,
          "shadowless": undefined,
          "style": Object {},
          "textAlignment": undefined,
          "textColor": undefined,
          "textSize": undefined,
          "textTransform": undefined,
          "textWeight": undefined,
          "unselectable": undefined,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "backgroundColor": undefined,
            "children": Array [
              <Level
                breakpoint={null}
                className=""
                renderAs="div"
                style={Object {}}
              >
                <Heading
                  className="absolutely-no-margin level-item level-left"
                  heading={false}
                  renderAs="h1"
                  size={3}
                  spaced={false}
                  subtitle={false}
                  weight={null}
                >
                  Sheets
                </Heading>
                <a
                  className="level-item level-right edit-link"
                  id="activate-create"
                  onClick={[Function]}
                  style={
                    Object {
                      "verticalAlign": "top",
                    }
                  }
                >
                  <FontAwesomeIcon
                    border={false}
                    className=""
                    fixedWidth={false}
                    flip={null}
                    icon="plus"
                    inverse={false}
                    listItem={false}
                    mask={null}
                    pull={null}
                    pulse={false}
                    rotation={null}
                    size={null}
                    spin={false}
                    style={
                      Object {
                        "paddingRight": "0.2rem",
                      }
                    }
                    symbol={false}
                    title=""
                    transform={null}
                  />
                   
                  Create
                </a>
              </Level>,
              Array [],
            ],
            "className": "margin-default",
            "clearfix": undefined,
            "clipped": undefined,
            "hidden": undefined,
            "invisible": undefined,
            "italic": undefined,
            "marginless": undefined,
            "overlay": undefined,
            "paddingless": undefined,
            "pull": undefined,
            "radiusless": undefined,
            "renderAs": "div",
            "responsive": undefined,
            "shadowless": undefined,
            "style": Object {},
            "textAlignment": undefined,
            "textColor": undefined,
            "textSize": undefined,
            "textTransform": undefined,
            "textWeight": undefined,
            "unselectable": undefined,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "backgroundColor": undefined,
                "breakpoint": null,
                "children": Array [
                  <Heading
                    className="absolutely-no-margin level-item level-left"
                    heading={false}
                    renderAs="h1"
                    size={3}
                    spaced={false}
                    subtitle={false}
                    weight={null}
                  >
                    Sheets
                  </Heading>,
                  <a
                    className="level-item level-right edit-link"
                    id="activate-create"
                    onClick={[Function]}
                    style={
                      Object {
                        "verticalAlign": "top",
                      }
                    }
                  >
                    <FontAwesomeIcon
                      border={false}
                      className=""
                      fixedWidth={false}
                      flip={null}
                      icon="plus"
                      inverse={false}
                      listItem={false}
                      mask={null}
                      pull={null}
                      pulse={false}
                      rotation={null}
                      size={null}
                      spin={false}
                      style={
                        Object {
                          "paddingRight": "0.2rem",
                        }
                      }
                      symbol={false}
                      title=""
                      transform={null}
                    />
                     
                    Create
                  </a>,
                ],
                "className": "",
                "clearfix": undefined,
                "clipped": undefined,
                "hidden": undefined,
                "invisible": undefined,
                "italic": undefined,
                "marginless": undefined,
                "overlay": undefined,
                "paddingless": undefined,
                "pull": undefined,
                "radiusless": undefined,
                "renderAs": "div",
                "responsive": undefined,
                "shadowless": undefined,
                "style": Object {},
                "textAlignment": undefined,
                "textColor": undefined,
                "textSize": undefined,
                "textTransform": undefined,
                "textWeight": undefined,
                "unselectable": undefined,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "backgroundColor": undefined,
                    "children": "Sheets",
                    "className": "absolutely-no-margin level-item level-left",
                    "clearfix": undefined,
                    "clipped": undefined,
                    "heading": false,
                    "hidden": undefined,
                    "invisible": undefined,
                    "italic": undefined,
                    "marginless": undefined,
                    "overlay": undefined,
                    "paddingless": undefined,
                    "pull": undefined,
                    "radiusless": undefined,
                    "renderAs": "h1",
                    "responsive": undefined,
                    "shadowless": undefined,
                    "size": 3,
                    "spaced": false,
                    "subtitle": false,
                    "textAlignment": undefined,
                    "textColor": undefined,
                    "textSize": undefined,
                    "textTransform": undefined,
                    "textWeight": undefined,
                    "unselectable": undefined,
                    "weight": null,
                  },
                  "ref": null,
                  "rendered": "Sheets",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <FontAwesomeIcon
                        border={false}
                        className=""
                        fixedWidth={false}
                        flip={null}
                        icon="plus"
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size={null}
                        spin={false}
                        style={
                          Object {
                            "paddingRight": "0.2rem",
                          }
                        }
                        symbol={false}
                        title=""
                        transform={null}
                      />,
                      " ",
                      "Create",
                    ],
                    "className": "level-item level-right edit-link",
                    "id": "activate-create",
                    "onClick": [Function],
                    "style": Object {
                      "verticalAlign": "top",
                    },
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "border": false,
                        "className": "",
                        "fixedWidth": false,
                        "flip": null,
                        "icon": "plus",
                        "inverse": false,
                        "listItem": false,
                        "mask": null,
                        "pull": null,
                        "pulse": false,
                        "rotation": null,
                        "size": null,
                        "spin": false,
                        "style": Object {
                          "paddingRight": "0.2rem",
                        },
                        "symbol": false,
                        "title": "",
                        "transform": null,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    " ",
                    "Create",
                  ],
                  "type": "a",
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <ModalContent
            className=""
            renderAs="div"
            style={Object {}}
          >
            <Box
              className=""
              renderAs="div"
              style={Object {}}
            >
              <Heading
                className="absolutely-no-margin little-padding-bottom"
                heading={false}
                renderAs="h1"
                size={4}
                spaced={false}
                subtitle={false}
                weight={null}
              >
                New Sheet
              </Heading>
              <form>
                <TextFieldWithErrors
                  label="File Name"
                  onChange={[Function]}
                  placeholder="file.pdf"
                  type="text"
                  value=""
                />
                <TextFieldWithErrors
                  label="File format"
                  onChange={[Function]}
                  placeholder="PDF"
                  type="text"
                  value=""
                />
                <TextFieldWithErrors
                  label="Sheet Type"
                  onChange={[Function]}
                  placeholder="part"
                  type="text"
                  value=""
                />
                <FieldWithErrors
                  label="File"
                >
                  <FilePond
                    allowMultiple={false}
                    file={null}
                    onupdatfiles={[Function]}
                  />
                </FieldWithErrors>
                <Field
                  align={null}
                  className=""
                  horizontal={false}
                  kind={null}
                  multiline={false}
                  renderAs="div"
                  style={Object {}}
                  type="group"
                >
                  <Control
                    className=""
                    fullwidth={false}
                    iconLeft={false}
                    iconRight={false}
                    loading={false}
                    renderAs="div"
                    size={null}
                    style={Object {}}
                  >
                    <Button
                      className=""
                      color="primary"
                      disabled={false}
                      fullwidth={false}
                      inverted={false}
                      isSelected={false}
                      isStatic={false}
                      loading={false}
                      onClick={[Function]}
                      outlined={false}
                      remove={false}
                      renderAs="button"
                      reset={false}
                      rounded={false}
                      size={null}
                      state={null}
                      style={Object {}}
                      submit={false}
                      text={false}
                      type="primary"
                    >
                      Save
                    </Button>
                    <Button
                      className=""
                      color={null}
                      disabled={false}
                      fullwidth={false}
                      inverted={false}
                      isSelected={false}
                      isStatic={false}
                      loading={false}
                      onClick={[Function]}
                      outlined={false}
                      remove={false}
                      renderAs="button"
                      reset={false}
                      rounded={false}
                      size={null}
                      state={null}
                      style={Object {}}
                      submit={false}
                      text={false}
                    >
                      Cancel
                    </Button>
                  </Control>
                </Field>
              </form>
            </Box>
          </ModalContent>,
          "className": "",
          "closeOnBlur": true,
          "closeOnEsc": true,
          "document": null,
          "onClose": [Function],
          "show": false,
          "showClose": true,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "backgroundColor": undefined,
            "children": <Box
              className=""
              renderAs="div"
              style={Object {}}
            >
              <Heading
                className="absolutely-no-margin little-padding-bottom"
                heading={false}
                renderAs="h1"
                size={4}
                spaced={false}
                subtitle={false}
                weight={null}
              >
                New Sheet
              </Heading>
              <form>
                <TextFieldWithErrors
                  label="File Name"
                  onChange={[Function]}
                  placeholder="file.pdf"
                  type="text"
                  value=""
                />
                <TextFieldWithErrors
                  label="File format"
                  onChange={[Function]}
                  placeholder="PDF"
                  type="text"
                  value=""
                />
                <TextFieldWithErrors
                  label="Sheet Type"
                  onChange={[Function]}
                  placeholder="part"
                  type="text"
                  value=""
                />
                <FieldWithErrors
                  label="File"
                >
                  <FilePond
                    allowMultiple={false}
                    file={null}
                    onupdatfiles={[Function]}
                  />
                </FieldWithErrors>
                <Field
                  align={null}
                  className=""
                  horizontal={false}
                  kind={null}
                  multiline={false}
                  renderAs="div"
                  style={Object {}}
                  type="group"
                >
                  <Control
                    className=""
                    fullwidth={false}
                    iconLeft={false}
                    iconRight={false}
                    loading={false}
                    renderAs="div"
                    size={null}
                    style={Object {}}
                  >
                    <Button
                      className=""
                      color="primary"
                      disabled={false}
                      fullwidth={false}
                      inverted={false}
                      isSelected={false}
                      isStatic={false}
                      loading={false}
                      onClick={[Function]}
                      outlined={false}
                      remove={false}
                      renderAs="button"
                      reset={false}
                      rounded={false}
                      size={null}
                      state={null}
                      style={Object {}}
                      submit={false}
                      text={false}
                      type="primary"
                    >
                      Save
                    </Button>
                    <Button
                      className=""
                      color={null}
                      disabled={false}
                      fullwidth={false}
                      inverted={false}
                      isSelected={false}
                      isStatic={false}
                      loading={false}
                      onClick={[Function]}
                      outlined={false}
                      remove={false}
                      renderAs="button"
                      reset={false}
                      rounded={false}
                      size={null}
                      state={null}
                      style={Object {}}
                      submit={false}
                      text={false}
                    >
                      Cancel
                    </Button>
                  </Control>
                </Field>
              </form>
            </Box>,
            "className": "",
            "clearfix": undefined,
            "clipped": undefined,
            "hidden": undefined,
            "invisible": undefined,
            "italic": undefined,
            "marginless": undefined,
            "overlay": undefined,
            "paddingless": undefined,
            "pull": undefined,
            "radiusless": undefined,
            "renderAs": "div",
            "responsive": undefined,
            "shadowless": undefined,
            "style": Object {},
            "textAlignment": undefined,
            "textColor": undefined,
            "textSize": undefined,
            "textTransform": undefined,
            "textWeight": undefined,
            "unselectable": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "backgroundColor": undefined,
              "children": Array [
                <Heading
                  className="absolutely-no-margin little-padding-bottom"
                  heading={false}
                  renderAs="h1"
                  size={4}
                  spaced={false}
                  subtitle={false}
                  weight={null}
                >
                  New Sheet
                </Heading>,
                <form>
                  <TextFieldWithErrors
                    label="File Name"
                    onChange={[Function]}
                    placeholder="file.pdf"
                    type="text"
                    value=""
                  />
                  <TextFieldWithErrors
                    label="File format"
                    onChange={[Function]}
                    placeholder="PDF"
                    type="text"
                    value=""
                  />
                  <TextFieldWithErrors
                    label="Sheet Type"
                    onChange={[Function]}
                    placeholder="part"
                    type="text"
                    value=""
                  />
                  <FieldWithErrors
                    label="File"
                  >
                    <FilePond
                      allowMultiple={false}
                      file={null}
                      onupdatfiles={[Function]}
                    />
                  </FieldWithErrors>
                  <Field
                    align={null}
                    className=""
                    horizontal={false}
                    kind={null}
                    multiline={false}
                    renderAs="div"
                    style={Object {}}
                    type="group"
                  >
                    <Control
                      className=""
                      fullwidth={false}
                      iconLeft={false}
                      iconRight={false}
                      loading={false}
                      renderAs="div"
                      size={null}
                      style={Object {}}
                    >
                      <Button
                        className=""
                        color="primary"
                        disabled={false}
                        fullwidth={false}
                        inverted={false}
                        isSelected={false}
                        isStatic={false}
                        loading={false}
                        onClick={[Function]}
                        outlined={false}
                        remove={false}
                        renderAs="button"
                        reset={false}
                        rounded={false}
                        size={null}
                        state={null}
                        style={Object {}}
                        submit={false}
                        text={false}
                        type="primary"
                      >
                        Save
                      </Button>
                      <Button
                        className=""
                        color={null}
                        disabled={false}
                        fullwidth={false}
                        inverted={false}
                        isSelected={false}
                        isStatic={false}
                        loading={false}
                        onClick={[Function]}
                        outlined={false}
                        remove={false}
                        renderAs="button"
                        reset={false}
                        rounded={false}
                        size={null}
                        state={null}
                        style={Object {}}
                        submit={false}
                        text={false}
                      >
                        Cancel
                      </Button>
                    </Control>
                  </Field>
                </form>,
              ],
              "className": "",
              "clearfix": undefined,
              "clipped": undefined,
              "hidden": undefined,
              "invisible": undefined,
              "italic": undefined,
              "marginless": undefined,
              "overlay": undefined,
              "paddingless": undefined,
              "pull": undefined,
              "radiusless": undefined,
              "renderAs": "div",
              "responsive": undefined,
              "shadowless": undefined,
              "style": Object {},
              "textAlignment": undefined,
              "textColor": undefined,
              "textSize": undefined,
              "textTransform": undefined,
              "textWeight": undefined,
              "unselectable": undefined,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "backgroundColor": undefined,
                  "children": "New Sheet",
                  "className": "absolutely-no-margin little-padding-bottom",
                  "clearfix": undefined,
                  "clipped": undefined,
                  "heading": false,
                  "hidden": undefined,
                  "invisible": undefined,
                  "italic": undefined,
                  "marginless": undefined,
                  "overlay": undefined,
                  "paddingless": undefined,
                  "pull": undefined,
                  "radiusless": undefined,
                  "renderAs": "h1",
                  "responsive": undefined,
                  "shadowless": undefined,
                  "size": 4,
                  "spaced": false,
                  "subtitle": false,
                  "textAlignment": undefined,
                  "textColor": undefined,
                  "textSize": undefined,
                  "textTransform": undefined,
                  "textWeight": undefined,
                  "unselectable": undefined,
                  "weight": null,
                },
                "ref": null,
                "rendered": "New Sheet",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <TextFieldWithErrors
                      label="File Name"
                      onChange={[Function]}
                      placeholder="file.pdf"
                      type="text"
                      value=""
                    />,
                    <TextFieldWithErrors
                      label="File format"
                      onChange={[Function]}
                      placeholder="PDF"
                      type="text"
                      value=""
                    />,
                    <TextFieldWithErrors
                      label="Sheet Type"
                      onChange={[Function]}
                      placeholder="part"
                      type="text"
                      value=""
                    />,
                    <FieldWithErrors
                      label="File"
                    >
                      <FilePond
                        allowMultiple={false}
                        file={null}
                        onupdatfiles={[Function]}
                      />
                    </FieldWithErrors>,
                    <Field
                      align={null}
                      className=""
                      horizontal={false}
                      kind={null}
                      multiline={false}
                      renderAs="div"
                      style={Object {}}
                      type="group"
                    >
                      <Control
                        className=""
                        fullwidth={false}
                        iconLeft={false}
                        iconRight={false}
                        loading={false}
                        renderAs="div"
                        size={null}
                        style={Object {}}
                      >
                        <Button
                          className=""
                          color="primary"
                          disabled={false}
                          fullwidth={false}
                          inverted={false}
                          isSelected={false}
                          isStatic={false}
                          loading={false}
                          onClick={[Function]}
                          outlined={false}
                          remove={false}
                          renderAs="button"
                          reset={false}
                          rounded={false}
                          size={null}
                          state={null}
                          style={Object {}}
                          submit={false}
                          text={false}
                          type="primary"
                        >
                          Save
                        </Button>
                        <Button
                          className=""
                          color={null}
                          disabled={false}
                          fullwidth={false}
                          inverted={false}
                          isSelected={false}
                          isStatic={false}
                          loading={false}
                          onClick={[Function]}
                          outlined={false}
                          remove={false}
                          renderAs="button"
                          reset={false}
                          rounded={false}
                          size={null}
                          state={null}
                          style={Object {}}
                          submit={false}
                          text={false}
                        >
                          Cancel
                        </Button>
                      </Control>
                    </Field>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "error": undefined,
                      "label": "File Name",
                      "onChange": [Function],
                      "placeholder": "file.pdf",
                      "type": "text",
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "error": undefined,
                      "label": "File format",
                      "onChange": [Function],
                      "placeholder": "PDF",
                      "type": "text",
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "error": undefined,
                      "label": "Sheet Type",
                      "onChange": [Function],
                      "placeholder": "part",
                      "type": "text",
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": <FilePond
                        allowMultiple={false}
                        file={null}
                        onupdatfiles={[Function]}
                      />,
                      "error": undefined,
                      "label": "File",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "allowMultiple": false,
                        "file": null,
                        "onupdatfiles": [Function],
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "align": null,
                      "backgroundColor": undefined,
                      "children": <Control
                        className=""
                        fullwidth={false}
                        iconLeft={false}
                        iconRight={false}
                        loading={false}
                        renderAs="div"
                        size={null}
                        style={Object {}}
                      >
                        <Button
                          className=""
                          color="primary"
                          disabled={false}
                          fullwidth={false}
                          inverted={false}
                          isSelected={false}
                          isStatic={false}
                          loading={false}
                          onClick={[Function]}
                          outlined={false}
                          remove={false}
                          renderAs="button"
                          reset={false}
                          rounded={false}
                          size={null}
                          state={null}
                          style={Object {}}
                          submit={false}
                          text={false}
                          type="primary"
                        >
                          Save
                        </Button>
                        <Button
                          className=""
                          color={null}
                          disabled={false}
                          fullwidth={false}
                          inverted={false}
                          isSelected={false}
                          isStatic={false}
                          loading={false}
                          onClick={[Function]}
                          outlined={false}
                          remove={false}
                          renderAs="button"
                          reset={false}
                          rounded={false}
                          size={null}
                          state={null}
                          style={Object {}}
                          submit={false}
                          text={false}
                        >
                          Cancel
                        </Button>
                      </Control>,
                      "className": "",
                      "clearfix": undefined,
                      "clipped": undefined,
                      "hidden": undefined,
                      "horizontal": false,
                      "invisible": undefined,
                      "italic": undefined,
                      "kind": null,
                      "marginless": undefined,
                      "multiline": false,
                      "overlay": undefined,
                      "paddingless": undefined,
                      "pull": undefined,
                      "radiusless": undefined,
                      "renderAs": "div",
                      "responsive": undefined,
                      "shadowless": undefined,
                      "style": Object {},
                      "textAlignment": undefined,
                      "textColor": undefined,
                      "textSize": undefined,
                      "textTransform": undefined,
                      "textWeight": undefined,
                      "type": "group",
                      "unselectable": undefined,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "backgroundColor": undefined,
                        "children": Array [
                          <Button
                            className=""
                            color="primary"
                            disabled={false}
                            fullwidth={false}
                            inverted={false}
                            isSelected={false}
                            isStatic={false}
                            loading={false}
                            onClick={[Function]}
                            outlined={false}
                            remove={false}
                            renderAs="button"
                            reset={false}
                            rounded={false}
                            size={null}
                            state={null}
                            style={Object {}}
                            submit={false}
                            text={false}
                            type="primary"
                          >
                            Save
                          </Button>,
                          <Button
                            className=""
                            color={null}
                            disabled={false}
                            fullwidth={false}
                            inverted={false}
                            isSelected={false}
                            isStatic={false}
                            loading={false}
                            onClick={[Function]}
                            outlined={false}
                            remove={false}
                            renderAs="button"
                            reset={false}
                            rounded={false}
                            size={null}
                            state={null}
                            style={Object {}}
                            submit={false}
                            text={false}
                          >
                            Cancel
                          </Button>,
                        ],
                        "className": "",
                        "clearfix": undefined,
                        "clipped": undefined,
                        "fullwidth": false,
                        "hidden": undefined,
                        "iconLeft": false,
                        "iconRight": false,
                        "invisible": undefined,
                        "italic": undefined,
                        "loading": false,
                        "marginless": undefined,
                        "overlay": undefined,
                        "paddingless": undefined,
                        "pull": undefined,
                        "radiusless": undefined,
                        "renderAs": "div",
                        "responsive": undefined,
                        "shadowless": undefined,
                        "size": null,
                        "style": Object {},
                        "textAlignment": undefined,
                        "textColor": undefined,
                        "textSize": undefined,
                        "textTransform": undefined,
                        "textWeight": undefined,
                        "unselectable": undefined,
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "backgroundColor": undefined,
                            "children": "Save",
                            "className": "",
                            "clearfix": undefined,
                            "clipped": undefined,
                            "color": "primary",
                            "disabled": false,
                            "fullwidth": false,
                            "hidden": undefined,
                            "inverted": false,
                            "invisible": undefined,
                            "isSelected": false,
                            "isStatic": false,
                            "italic": undefined,
                            "loading": false,
                            "marginless": undefined,
                            "onClick": [Function],
                            "outlined": false,
                            "overlay": undefined,
                            "paddingless": undefined,
                            "pull": undefined,
                            "radiusless": undefined,
                            "remove": false,
                            "renderAs": "button",
                            "reset": false,
                            "responsive": undefined,
                            "rounded": false,
                            "shadowless": undefined,
                            "size": null,
                            "state": null,
                            "style": Object {},
                            "submit": false,
                            "text": false,
                            "textAlignment": undefined,
                            "textColor": undefined,
                            "textSize": undefined,
                            "textTransform": undefined,
                            "textWeight": undefined,
                            "type": "primary",
                            "unselectable": undefined,
                          },
                          "ref": null,
                          "rendered": "Save",
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "backgroundColor": undefined,
                            "children": "Cancel",
                            "className": "",
                            "clearfix": undefined,
                            "clipped": undefined,
                            "color": null,
                            "disabled": false,
                            "fullwidth": false,
                            "hidden": undefined,
                            "inverted": false,
                            "invisible": undefined,
                            "isSelected": false,
                            "isStatic": false,
                            "italic": undefined,
                            "loading": false,
                            "marginless": undefined,
                            "onClick": [Function],
                            "outlined": false,
                            "overlay": undefined,
                            "paddingless": undefined,
                            "pull": undefined,
                            "radiusless": undefined,
                            "remove": false,
                            "renderAs": "button",
                            "reset": false,
                            "responsive": undefined,
                            "rounded": false,
                            "shadowless": undefined,
                            "size": null,
                            "state": null,
                            "style": Object {},
                            "submit": false,
                            "text": false,
                            "textAlignment": undefined,
                            "textColor": undefined,
                            "textSize": undefined,
                            "textTransform": undefined,
                            "textWeight": undefined,
                            "unselectable": undefined,
                          },
                          "ref": null,
                          "rendered": "Cancel",
                          "type": [Function],
                        },
                      ],
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": "form",
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Connect(Header) />,
          <Container
            breakpoint={null}
            fluid={false}
            renderAs="div"
            style={Object {}}
          >
            <Box
              className="margin-default"
              renderAs="div"
              style={Object {}}
            >
              <Level
                breakpoint={null}
                className=""
                renderAs="div"
                style={Object {}}
              >
                <Heading
                  className="absolutely-no-margin level-item level-left"
                  heading={false}
                  renderAs="h1"
                  size={3}
                  spaced={false}
                  subtitle={false}
                  weight={null}
                >
                  Sheets
                </Heading>
                <a
                  className="level-item level-right edit-link"
                  id="activate-create"
                  onClick={[Function]}
                  style={
                    Object {
                      "verticalAlign": "top",
                    }
                  }
                >
                  <FontAwesomeIcon
                    border={false}
                    className=""
                    fixedWidth={false}
                    flip={null}
                    icon="plus"
                    inverse={false}
                    listItem={false}
                    mask={null}
                    pull={null}
                    pulse={false}
                    rotation={null}
                    size={null}
                    spin={false}
                    style={
                      Object {
                        "paddingRight": "0.2rem",
                      }
                    }
                    symbol={false}
                    title=""
                    transform={null}
                  />
                   
                  Create
                </a>
              </Level>
            </Box>
          </Container>,
          <Modal
            className=""
            closeOnBlur={true}
            closeOnEsc={true}
            document={null}
            onClose={[Function]}
            show={false}
            showClose={true}
          >
            <ModalContent
              className=""
              renderAs="div"
              style={Object {}}
            >
              <Box
                className=""
                renderAs="div"
                style={Object {}}
              >
                <Heading
                  className="absolutely-no-margin little-padding-bottom"
                  heading={false}
                  renderAs="h1"
                  size={4}
                  spaced={false}
                  subtitle={false}
                  weight={null}
                >
                  New Sheet
                </Heading>
                <form>
                  <TextFieldWithErrors
                    label="File Name"
                    onChange={[Function]}
                    placeholder="file.pdf"
                    type="text"
                    value=""
                  />
                  <TextFieldWithErrors
                    label="File format"
                    onChange={[Function]}
                    placeholder="PDF"
                    type="text"
                    value=""
                  />
                  <TextFieldWithErrors
                    label="Sheet Type"
                    onChange={[Function]}
                    placeholder="part"
                    type="text"
                    value=""
                  />
                  <FieldWithErrors
                    label="File"
                  >
                    <FilePond
                      allowMultiple={false}
                      file={null}
                      onupdatfiles={[Function]}
                    />
                  </FieldWithErrors>
                  <Field
                    align={null}
                    className=""
                    horizontal={false}
                    kind={null}
                    multiline={false}
                    renderAs="div"
                    style={Object {}}
                    type="group"
                  >
                    <Control
                      className=""
                      fullwidth={false}
                      iconLeft={false}
                      iconRight={false}
                      loading={false}
                      renderAs="div"
                      size={null}
                      style={Object {}}
                    >
                      <Button
                        className=""
                        color="primary"
                        disabled={false}
                        fullwidth={false}
                        inverted={false}
                        isSelected={false}
                        isStatic={false}
                        loading={false}
                        onClick={[Function]}
                        outlined={false}
                        remove={false}
                        renderAs="button"
                        reset={false}
                        rounded={false}
                        size={null}
                        state={null}
                        style={Object {}}
                        submit={false}
                        text={false}
                        type="primary"
                      >
                        Save
                      </Button>
                      <Button
                        className=""
                        color={null}
                        disabled={false}
                        fullwidth={false}
                        inverted={false}
                        isSelected={false}
                        isStatic={false}
                        loading={false}
                        onClick={[Function]}
                        outlined={false}
                        remove={false}
                        renderAs="button"
                        reset={false}
                        rounded={false}
                        size={null}
                        state={null}
                        style={Object {}}
                        submit={false}
                        text={false}
                      >
                        Cancel
                      </Button>
                    </Control>
                  </Field>
                </form>
              </Box>
            </ModalContent>
          </Modal>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "backgroundColor": undefined,
            "breakpoint": null,
            "children": <Box
              className="margin-default"
              renderAs="div"
              style={Object {}}
            >
              <Level
                breakpoint={null}
                className=""
                renderAs="div"
                style={Object {}}
              >
                <Heading
                  className="absolutely-no-margin level-item level-left"
                  heading={false}
                  renderAs="h1"
                  size={3}
                  spaced={false}
                  subtitle={false}
                  weight={null}
                >
                  Sheets
                </Heading>
                <a
                  className="level-item level-right edit-link"
                  id="activate-create"
                  onClick={[Function]}
                  style={
                    Object {
                      "verticalAlign": "top",
                    }
                  }
                >
                  <FontAwesomeIcon
                    border={false}
                    className=""
                    fixedWidth={false}
                    flip={null}
                    icon="plus"
                    inverse={false}
                    listItem={false}
                    mask={null}
                    pull={null}
                    pulse={false}
                    rotation={null}
                    size={null}
                    spin={false}
                    style={
                      Object {
                        "paddingRight": "0.2rem",
                      }
                    }
                    symbol={false}
                    title=""
                    transform={null}
                  />
                   
                  Create
                </a>
              </Level>
            </Box>,
            "className": undefined,
            "clearfix": undefined,
            "clipped": undefined,
            "fluid": false,
            "hidden": undefined,
            "invisible": undefined,
            "italic": undefined,
            "marginless": undefined,
            "overlay": undefined,
            "paddingless": undefined,
            "pull": undefined,
            "radiusless": undefined,
            "renderAs": "div",
            "responsive": undefined,
            "shadowless": undefined,
            "style": Object {},
            "textAlignment": undefined,
            "textColor": undefined,
            "textSize": undefined,
            "textTransform": undefined,
            "textWeight": undefined,
            "unselectable": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "backgroundColor": undefined,
              "children": Array [
                <Level
                  breakpoint={null}
                  className=""
                  renderAs="div"
                  style={Object {}}
                >
                  <Heading
                    className="absolutely-no-margin level-item level-left"
                    heading={false}
                    renderAs="h1"
                    size={3}
                    spaced={false}
                    subtitle={false}
                    weight={null}
                  >
                    Sheets
                  </Heading>
                  <a
                    className="level-item level-right edit-link"
                    id="activate-create"
                    onClick={[Function]}
                    style={
                      Object {
                        "verticalAlign": "top",
                      }
                    }
                  >
                    <FontAwesomeIcon
                      border={false}
                      className=""
                      fixedWidth={false}
                      flip={null}
                      icon="plus"
                      inverse={false}
                      listItem={false}
                      mask={null}
                      pull={null}
                      pulse={false}
                      rotation={null}
                      size={null}
                      spin={false}
                      style={
                        Object {
                          "paddingRight": "0.2rem",
                        }
                      }
                      symbol={false}
                      title=""
                      transform={null}
                    />
                     
                    Create
                  </a>
                </Level>,
                Array [],
              ],
              "className": "margin-default",
              "clearfix": undefined,
              "clipped": undefined,
              "hidden": undefined,
              "invisible": undefined,
              "italic": undefined,
              "marginless": undefined,
              "overlay": undefined,
              "paddingless": undefined,
              "pull": undefined,
              "radiusless": undefined,
              "renderAs": "div",
              "responsive": undefined,
              "shadowless": undefined,
              "style": Object {},
              "textAlignment": undefined,
              "textColor": undefined,
              "textSize": undefined,
              "textTransform": undefined,
              "textWeight": undefined,
              "unselectable": undefined,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "backgroundColor": undefined,
                  "breakpoint": null,
                  "children": Array [
                    <Heading
                      className="absolutely-no-margin level-item level-left"
                      heading={false}
                      renderAs="h1"
                      size={3}
                      spaced={false}
                      subtitle={false}
                      weight={null}
                    >
                      Sheets
                    </Heading>,
                    <a
                      className="level-item level-right edit-link"
                      id="activate-create"
                      onClick={[Function]}
                      style={
                        Object {
                          "verticalAlign": "top",
                        }
                      }
                    >
                      <FontAwesomeIcon
                        border={false}
                        className=""
                        fixedWidth={false}
                        flip={null}
                        icon="plus"
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size={null}
                        spin={false}
                        style={
                          Object {
                            "paddingRight": "0.2rem",
                          }
                        }
                        symbol={false}
                        title=""
                        transform={null}
                      />
                       
                      Create
                    </a>,
                  ],
                  "className": "",
                  "clearfix": undefined,
                  "clipped": undefined,
                  "hidden": undefined,
                  "invisible": undefined,
                  "italic": undefined,
                  "marginless": undefined,
                  "overlay": undefined,
                  "paddingless": undefined,
                  "pull": undefined,
                  "radiusless": undefined,
                  "renderAs": "div",
                  "responsive": undefined,
                  "shadowless": undefined,
                  "style": Object {},
                  "textAlignment": undefined,
                  "textColor": undefined,
                  "textSize": undefined,
                  "textTransform": undefined,
                  "textWeight": undefined,
                  "unselectable": undefined,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "backgroundColor": undefined,
                      "children": "Sheets",
                      "className": "absolutely-no-margin level-item level-left",
                      "clearfix": undefined,
                      "clipped": undefined,
                      "heading": false,
                      "hidden": undefined,
                      "invisible": undefined,
                      "italic": undefined,
                      "marginless": undefined,
                      "overlay": undefined,
                      "paddingless": undefined,
                      "pull": undefined,
                      "radiusless": undefined,
                      "renderAs": "h1",
                      "responsive": undefined,
                      "shadowless": undefined,
                      "size": 3,
                      "spaced": false,
                      "subtitle": false,
                      "textAlignment": undefined,
                      "textColor": undefined,
                      "textSize": undefined,
                      "textTransform": undefined,
                      "textWeight": undefined,
                      "unselectable": undefined,
                      "weight": null,
                    },
                    "ref": null,
                    "rendered": "Sheets",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon="plus"
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          style={
                            Object {
                              "paddingRight": "0.2rem",
                            }
                          }
                          symbol={false}
                          title=""
                          transform={null}
                        />,
                        " ",
                        "Create",
                      ],
                      "className": "level-item level-right edit-link",
                      "id": "activate-create",
                      "onClick": [Function],
                      "style": Object {
                        "verticalAlign": "top",
                      },
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "border": false,
                          "className": "",
                          "fixedWidth": false,
                          "flip": null,
                          "icon": "plus",
                          "inverse": false,
                          "listItem": false,
                          "mask": null,
                          "pull": null,
                          "pulse": false,
                          "rotation": null,
                          "size": null,
                          "spin": false,
                          "style": Object {
                            "paddingRight": "0.2rem",
                          },
                          "symbol": false,
                          "title": "",
                          "transform": null,
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      " ",
                      "Create",
                    ],
                    "type": "a",
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <ModalContent
              className=""
              renderAs="div"
              style={Object {}}
            >
              <Box
                className=""
                renderAs="div"
                style={Object {}}
              >
                <Heading
                  className="absolutely-no-margin little-padding-bottom"
                  heading={false}
                  renderAs="h1"
                  size={4}
                  spaced={false}
                  subtitle={false}
                  weight={null}
                >
                  New Sheet
                </Heading>
                <form>
                  <TextFieldWithErrors
                    label="File Name"
                    onChange={[Function]}
                    placeholder="file.pdf"
                    type="text"
                    value=""
                  />
                  <TextFieldWithErrors
                    label="File format"
                    onChange={[Function]}
                    placeholder="PDF"
                    type="text"
                    value=""
                  />
                  <TextFieldWithErrors
                    label="Sheet Type"
                    onChange={[Function]}
                    placeholder="part"
                    type="text"
                    value=""
                  />
                  <FieldWithErrors
                    label="File"
                  >
                    <FilePond
                      allowMultiple={false}
                      file={null}
                      onupdatfiles={[Function]}
                    />
                  </FieldWithErrors>
                  <Field
                    align={null}
                    className=""
                    horizontal={false}
                    kind={null}
                    multiline={false}
                    renderAs="div"
                    style={Object {}}
                    type="group"
                  >
                    <Control
                      className=""
                      fullwidth={false}
                      iconLeft={false}
                      iconRight={false}
                      loading={false}
                      renderAs="div"
                      size={null}
                      style={Object {}}
                    >
                      <Button
                        className=""
                        color="primary"
                        disabled={false}
                        fullwidth={false}
                        inverted={false}
                        isSelected={false}
                        isStatic={false}
                        loading={false}
                        onClick={[Function]}
                        outlined={false}
                        remove={false}
                        renderAs="button"
                        reset={false}
                        rounded={false}
                        size={null}
                        state={null}
                        style={Object {}}
                        submit={false}
                        text={false}
                        type="primary"
                      >
                        Save
                      </Button>
                      <Button
                        className=""
                        color={null}
                        disabled={false}
                        fullwidth={false}
                        inverted={false}
                        isSelected={false}
                        isStatic={false}
                        loading={false}
                        onClick={[Function]}
                        outlined={false}
                        remove={false}
                        renderAs="button"
                        reset={false}
                        rounded={false}
                        size={null}
                        state={null}
                        style={Object {}}
                        submit={false}
                        text={false}
                      >
                        Cancel
                      </Button>
                    </Control>
                  </Field>
                </form>
              </Box>
            </ModalContent>,
            "className": "",
            "closeOnBlur": true,
            "closeOnEsc": true,
            "document": null,
            "onClose": [Function],
            "show": false,
            "showClose": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "backgroundColor": undefined,
              "children": <Box
                className=""
                renderAs="div"
                style={Object {}}
              >
                <Heading
                  className="absolutely-no-margin little-padding-bottom"
                  heading={false}
                  renderAs="h1"
                  size={4}
                  spaced={false}
                  subtitle={false}
                  weight={null}
                >
                  New Sheet
                </Heading>
                <form>
                  <TextFieldWithErrors
                    label="File Name"
                    onChange={[Function]}
                    placeholder="file.pdf"
                    type="text"
                    value=""
                  />
                  <TextFieldWithErrors
                    label="File format"
                    onChange={[Function]}
                    placeholder="PDF"
                    type="text"
                    value=""
                  />
                  <TextFieldWithErrors
                    label="Sheet Type"
                    onChange={[Function]}
                    placeholder="part"
                    type="text"
                    value=""
                  />
                  <FieldWithErrors
                    label="File"
                  >
                    <FilePond
                      allowMultiple={false}
                      file={null}
                      onupdatfiles={[Function]}
                    />
                  </FieldWithErrors>
                  <Field
                    align={null}
                    className=""
                    horizontal={false}
                    kind={null}
                    multiline={false}
                    renderAs="div"
                    style={Object {}}
                    type="group"
                  >
                    <Control
                      className=""
                      fullwidth={false}
                      iconLeft={false}
                      iconRight={false}
                      loading={false}
                      renderAs="div"
                      size={null}
                      style={Object {}}
                    >
                      <Button
                        className=""
                        color="primary"
                        disabled={false}
                        fullwidth={false}
                        inverted={false}
                        isSelected={false}
                        isStatic={false}
                        loading={false}
                        onClick={[Function]}
                        outlined={false}
                        remove={false}
                        renderAs="button"
                        reset={false}
                        rounded={false}
                        size={null}
                        state={null}
                        style={Object {}}
                        submit={false}
                        text={false}
                        type="primary"
                      >
                        Save
                      </Button>
                      <Button
                        className=""
                        color={null}
                        disabled={false}
                        fullwidth={false}
                        inverted={false}
                        isSelected={false}
                        isStatic={false}
                        loading={false}
                        onClick={[Function]}
                        outlined={false}
                        remove={false}
                        renderAs="button"
                        reset={false}
                        rounded={false}
                        size={null}
                        state={null}
                        style={Object {}}
                        submit={false}
                        text={false}
                      >
                        Cancel
                      </Button>
                    </Control>
                  </Field>
                </form>
              </Box>,
              "className": "",
              "clearfix": undefined,
              "clipped": undefined,
              "hidden": undefined,
              "invisible": undefined,
              "italic": undefined,
              "marginless": undefined,
              "overlay": undefined,
              "paddingless": undefined,
              "pull": undefined,
              "radiusless": undefined,
              "renderAs": "div",
              "responsive": undefined,
              "shadowless": undefined,
              "style": Object {},
              "textAlignment": undefined,
              "textColor": undefined,
              "textSize": undefined,
              "textTransform": undefined,
              "textWeight": undefined,
              "unselectable": undefined,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "backgroundColor": undefined,
                "children": Array [
                  <Heading
                    className="absolutely-no-margin little-padding-bottom"
                    heading={false}
                    renderAs="h1"
                    size={4}
                    spaced={false}
                    subtitle={false}
                    weight={null}
                  >
                    New Sheet
                  </Heading>,
                  <form>
                    <TextFieldWithErrors
                      label="File Name"
                      onChange={[Function]}
                      placeholder="file.pdf"
                      type="text"
                      value=""
                    />
                    <TextFieldWithErrors
                      label="File format"
                      onChange={[Function]}
                      placeholder="PDF"
                      type="text"
                      value=""
                    />
                    <TextFieldWithErrors
                      label="Sheet Type"
                      onChange={[Function]}
                      placeholder="part"
                      type="text"
                      value=""
                    />
                    <FieldWithErrors
                      label="File"
                    >
                      <FilePond
                        allowMultiple={false}
                        file={null}
                        onupdatfiles={[Function]}
                      />
                    </FieldWithErrors>
                    <Field
                      align={null}
                      className=""
                      horizontal={false}
                      kind={null}
                      multiline={false}
                      renderAs="div"
                      style={Object {}}
                      type="group"
                    >
                      <Control
                        className=""
                        fullwidth={false}
                        iconLeft={false}
                        iconRight={false}
                        loading={false}
                        renderAs="div"
                        size={null}
                        style={Object {}}
                      >
                        <Button
                          className=""
                          color="primary"
                          disabled={false}
                          fullwidth={false}
                          inverted={false}
                          isSelected={false}
                          isStatic={false}
                          loading={false}
                          onClick={[Function]}
                          outlined={false}
                          remove={false}
                          renderAs="button"
                          reset={false}
                          rounded={false}
                          size={null}
                          state={null}
                          style={Object {}}
                          submit={false}
                          text={false}
                          type="primary"
                        >
                          Save
                        </Button>
                        <Button
                          className=""
                          color={null}
                          disabled={false}
                          fullwidth={false}
                          inverted={false}
                          isSelected={false}
                          isStatic={false}
                          loading={false}
                          onClick={[Function]}
                          outlined={false}
                          remove={false}
                          renderAs="button"
                          reset={false}
                          rounded={false}
                          size={null}
                          state={null}
                          style={Object {}}
                          submit={false}
                          text={false}
                        >
                          Cancel
                        </Button>
                      </Control>
                    </Field>
                  </form>,
                ],
                "className": "",
                "clearfix": undefined,
                "clipped": undefined,
                "hidden": undefined,
                "invisible": undefined,
                "italic": undefined,
                "marginless": undefined,
                "overlay": undefined,
                "paddingless": undefined,
                "pull": undefined,
                "radiusless": undefined,
                "renderAs": "div",
                "responsive": undefined,
                "shadowless": undefined,
                "style": Object {},
                "textAlignment": undefined,
                "textColor": undefined,
                "textSize": undefined,
                "textTransform": undefined,
                "textWeight": undefined,
                "unselectable": undefined,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "backgroundColor": undefined,
                    "children": "New Sheet",
                    "className": "absolutely-no-margin little-padding-bottom",
                    "clearfix": undefined,
                    "clipped": undefined,
                    "heading": false,
                    "hidden": undefined,
                    "invisible": undefined,
                    "italic": undefined,
                    "marginless": undefined,
                    "overlay": undefined,
                    "paddingless": undefined,
                    "pull": undefined,
                    "radiusless": undefined,
                    "renderAs": "h1",
                    "responsive": undefined,
                    "shadowless": undefined,
                    "size": 4,
                    "spaced": false,
                    "subtitle": false,
                    "textAlignment": undefined,
                    "textColor": undefined,
                    "textSize": undefined,
                    "textTransform": undefined,
                    "textWeight": undefined,
                    "unselectable": undefined,
                    "weight": null,
                  },
                  "ref": null,
                  "rendered": "New Sheet",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <TextFieldWithErrors
                        label="File Name"
                        onChange={[Function]}
                        placeholder="file.pdf"
                        type="text"
                        value=""
                      />,
                      <TextFieldWithErrors
                        label="File format"
                        onChange={[Function]}
                        placeholder="PDF"
                        type="text"
                        value=""
                      />,
                      <TextFieldWithErrors
                        label="Sheet Type"
                        onChange={[Function]}
                        placeholder="part"
                        type="text"
                        value=""
                      />,
                      <FieldWithErrors
                        label="File"
                      >
                        <FilePond
                          allowMultiple={false}
                          file={null}
                          onupdatfiles={[Function]}
                        />
                      </FieldWithErrors>,
                      <Field
                        align={null}
                        className=""
                        horizontal={false}
                        kind={null}
                        multiline={false}
                        renderAs="div"
                        style={Object {}}
                        type="group"
                      >
                        <Control
                          className=""
                          fullwidth={false}
                          iconLeft={false}
                          iconRight={false}
                          loading={false}
                          renderAs="div"
                          size={null}
                          style={Object {}}
                        >
                          <Button
                            className=""
                            color="primary"
                            disabled={false}
                            fullwidth={false}
                            inverted={false}
                            isSelected={false}
                            isStatic={false}
                            loading={false}
                            onClick={[Function]}
                            outlined={false}
                            remove={false}
                            renderAs="button"
                            reset={false}
                            rounded={false}
                            size={null}
                            state={null}
                            style={Object {}}
                            submit={false}
                            text={false}
                            type="primary"
                          >
                            Save
                          </Button>
                          <Button
                            className=""
                            color={null}
                            disabled={false}
                            fullwidth={false}
                            inverted={false}
                            isSelected={false}
                            isStatic={false}
                            loading={false}
                            onClick={[Function]}
                            outlined={false}
                            remove={false}
                            renderAs="button"
                            reset={false}
                            rounded={false}
                            size={null}
                            state={null}
                            style={Object {}}
                            submit={false}
                            text={false}
                          >
                            Cancel
                          </Button>
                        </Control>
                      </Field>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "error": undefined,
                        "label": "File Name",
                        "onChange": [Function],
                        "placeholder": "file.pdf",
                        "type": "text",
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "error": undefined,
                        "label": "File format",
                        "onChange": [Function],
                        "placeholder": "PDF",
                        "type": "text",
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "error": undefined,
                        "label": "Sheet Type",
                        "onChange": [Function],
                        "placeholder": "part",
                        "type": "text",
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": <FilePond
                          allowMultiple={false}
                          file={null}
                          onupdatfiles={[Function]}
                        />,
                        "error": undefined,
                        "label": "File",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "allowMultiple": false,
                          "file": null,
                          "onupdatfiles": [Function],
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "align": null,
                        "backgroundColor": undefined,
                        "children": <Control
                          className=""
                          fullwidth={false}
                          iconLeft={false}
                          iconRight={false}
                          loading={false}
                          renderAs="div"
                          size={null}
                          style={Object {}}
                        >
                          <Button
                            className=""
                            color="primary"
                            disabled={false}
                            fullwidth={false}
                            inverted={false}
                            isSelected={false}
                            isStatic={false}
                            loading={false}
                            onClick={[Function]}
                            outlined={false}
                            remove={false}
                            renderAs="button"
                            reset={false}
                            rounded={false}
                            size={null}
                            state={null}
                            style={Object {}}
                            submit={false}
                            text={false}
                            type="primary"
                          >
                            Save
                          </Button>
                          <Button
                            className=""
                            color={null}
                            disabled={false}
                            fullwidth={false}
                            inverted={false}
                            isSelected={false}
                            isStatic={false}
                            loading={false}
                            onClick={[Function]}
                            outlined={false}
                            remove={false}
                            renderAs="button"
                            reset={false}
                            rounded={false}
                            size={null}
                            state={null}
                            style={Object {}}
                            submit={false}
                            text={false}
                          >
                            Cancel
                          </Button>
                        </Control>,
                        "className": "",
                        "clearfix": undefined,
                        "clipped": undefined,
                        "hidden": undefined,
                        "horizontal": false,
                        "invisible": undefined,
                        "italic": undefined,
                        "kind": null,
                        "marginless": undefined,
                        "multiline": false,
                        "overlay": undefined,
                        "paddingless": undefined,
                        "pull": undefined,
                        "radiusless": undefined,
                        "renderAs": "div",
                        "responsive": undefined,
                        "shadowless": undefined,
                        "style": Object {},
                        "textAlignment": undefined,
                        "textColor": undefined,
                        "textSize": undefined,
                        "textTransform": undefined,
                        "textWeight": undefined,
                        "type": "group",
                        "unselectable": undefined,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "backgroundColor": undefined,
                          "children": Array [
                            <Button
                              className=""
                              color="primary"
                              disabled={false}
                              fullwidth={false}
                              inverted={false}
                              isSelected={false}
                              isStatic={false}
                              loading={false}
                              onClick={[Function]}
                              outlined={false}
                              remove={false}
                              renderAs="button"
                              reset={false}
                              rounded={false}
                              size={null}
                              state={null}
                              style={Object {}}
                              submit={false}
                              text={false}
                              type="primary"
                            >
                              Save
                            </Button>,
                            <Button
                              className=""
                              color={null}
                              disabled={false}
                              fullwidth={false}
                              inverted={false}
                              isSelected={false}
                              isStatic={false}
                              loading={false}
                              onClick={[Function]}
                              outlined={false}
                              remove={false}
                              renderAs="button"
                              reset={false}
                              rounded={false}
                              size={null}
                              state={null}
                              style={Object {}}
                              submit={false}
                              text={false}
                            >
                              Cancel
                            </Button>,
                          ],
                          "className": "",
                          "clearfix": undefined,
                          "clipped": undefined,
                          "fullwidth": false,
                          "hidden": undefined,
                          "iconLeft": false,
                          "iconRight": false,
                          "invisible": undefined,
                          "italic": undefined,
                          "loading": false,
                          "marginless": undefined,
                          "overlay": undefined,
                          "paddingless": undefined,
                          "pull": undefined,
                          "radiusless": undefined,
                          "renderAs": "div",
                          "responsive": undefined,
                          "shadowless": undefined,
                          "size": null,
                          "style": Object {},
                          "textAlignment": undefined,
                          "textColor": undefined,
                          "textSize": undefined,
                          "textTransform": undefined,
                          "textWeight": undefined,
                          "unselectable": undefined,
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "function",
                            "props": Object {
                              "backgroundColor": undefined,
                              "children": "Save",
                              "className": "",
                              "clearfix": undefined,
                              "clipped": undefined,
                              "color": "primary",
                              "disabled": false,
                              "fullwidth": false,
                              "hidden": undefined,
                              "inverted": false,
                              "invisible": undefined,
                              "isSelected": false,
                              "isStatic": false,
                              "italic": undefined,
                              "loading": false,
                              "marginless": undefined,
                              "onClick": [Function],
                              "outlined": false,
                              "overlay": undefined,
                              "paddingless": undefined,
                              "pull": undefined,
                              "radiusless": undefined,
                              "remove": false,
                              "renderAs": "button",
                              "reset": false,
                              "responsive": undefined,
                              "rounded": false,
                              "shadowless": undefined,
                              "size": null,
                              "state": null,
                              "style": Object {},
                              "submit": false,
                              "text": false,
                              "textAlignment": undefined,
                              "textColor": undefined,
                              "textSize": undefined,
                              "textTransform": undefined,
                              "textWeight": undefined,
                              "type": "primary",
                              "unselectable": undefined,
                            },
                            "ref": null,
                            "rendered": "Save",
                            "type": [Function],
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "function",
                            "props": Object {
                              "backgroundColor": undefined,
                              "children": "Cancel",
                              "className": "",
                              "clearfix": undefined,
                              "clipped": undefined,
                              "color": null,
                              "disabled": false,
                              "fullwidth": false,
                              "hidden": undefined,
                              "inverted": false,
                              "invisible": undefined,
                              "isSelected": false,
                              "isStatic": false,
                              "italic": undefined,
                              "loading": false,
                              "marginless": undefined,
                              "onClick": [Function],
                              "outlined": false,
                              "overlay": undefined,
                              "paddingless": undefined,
                              "pull": undefined,
                              "radiusless": undefined,
                              "remove": false,
                              "renderAs": "button",
                              "reset": false,
                              "responsive": undefined,
                              "rounded": false,
                              "shadowless": undefined,
                              "size": null,
                              "state": null,
                              "style": Object {},
                              "submit": false,
                              "text": false,
                              "textAlignment": undefined,
                              "textColor": undefined,
                              "textSize": undefined,
                              "textTransform": undefined,
                              "textWeight": undefined,
                              "unselectable": undefined,
                            },
                            "ref": null,
                            "rendered": "Cancel",
                            "type": [Function],
                          },
                        ],
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                  ],
                  "type": "form",
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
